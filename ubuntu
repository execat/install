#!/usr/bin/env bash
# Ask for the administrator password upfront
sudo -v

# Keep-alive: update existing `sudo` time stamp until the script has finished
while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &

install_thoughtbot() {
  fancy_echo() {
    local fmt="$1"; shift

    # shellcheck disable=SC2059
    printf "\\n$fmt\\n" "$@"
  }

  append_to_zshrc() {
    local text="$1" zshrc
    local skip_new_line="${2:-0}"

    if [ -w "$HOME/.zshrc.local" ]; then
      zshrc="$HOME/.zshrc.local"
    else
      zshrc="$HOME/.zshrc"
    fi

    if ! grep -Fqs "$text" "$zshrc"; then
      if [ "$skip_new_line" -eq 1 ]; then
        printf "%s\\n" "$text" >> "$zshrc"
      else
        printf "\\n%s\\n" "$text" >> "$zshrc"
      fi
    fi
  }

  # shellcheck disable=SC2154
  trap 'ret=$?; test $ret -ne 0 && printf "failed\n\n" >&2; exit $ret' EXIT

  set -e

  if [ ! -d "$HOME/.bin/" ]; then
    mkdir "$HOME/.bin"
  fi

  if [ ! -f "$HOME/.zshrc" ]; then
    touch "$HOME/.zshrc"
  fi

  # shellcheck disable=SC2016
  append_to_zshrc 'export PATH="$HOME/.bin:$PATH"'

  gem_install_or_update() {
    if gem list "$1" --installed > /dev/null; then
      gem update "$@"
    else
      gem install "$@"
    fi
  }
  
  # Install basic dotfiles
  if [ -d "$HOME/.dotfiles" ]; then
    cd "$HOME/.dotfiles"
    git pull
    cd "$HOME/.dotfiles-local"
    git pull
  else
    git clone git://github.com/thoughtbot/dotfiles.git "$HOME/.dotfiles"
    git clone https://github.com/execat/dotfiles-local.git "$HOME/.dotfiles-local"
    
    sudo add-apt-repository ppa:martin-frost/thoughtbot-rcm
    sudo apt update
    sudo apt install rcm
  fi

  env RCRC=$HOME/.dotfiles/rcrc rcup
  rcup
}

install_apt() {
  sudo apt install fasd tree git-extras git-flow elixir emacs neovim cloc howdoi wget
  sudo add-apt-repository ppa:webupd8team/java
  sudo apt install oracle-java8-installer

  # All utils
  sudo apt install bash cowsay findutils mlocate moreutils binutils diffutils
  sudo apt install python3-dev python3-pip
  sudo pip3 install thefuck
}

install_packages() {
  if [ ! -d "$HOME/.fzf" ]; then
    git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
    ~/.fzf/install
  fi

  if [ ! -d "$HOME/.rbenv" ]; then
    curl -fsSL https://github.com/rbenv/rbenv-installer/raw/master/bin/rbenv-installer | bash
  fi
}

install_binaries() {
  # Check their GitHub: https://github.com/thisredone/rb
  curl https://raw.githubusercontent.com/thisredone/rb/master/rb -o ~/.bin/rb && chmod a+x ~/.bin/rb
}

run_script() {
  rbenv install jruby-9.2.0.0
  rbenv install 2.5.3
  rbenv global 2.5.3
  mkdir _code
}

# Install ohmyzsh
install_ohmyzsh() {
  if [ -d "$HOME/.oh-my-zsh" ]; then
    cd "$HOME/.oh-my-zsh"
    git pull
  else
    # Do entire oh-my-zsh installation but don't drop in the Zsh session (last line of the script)
    sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh | grep -v 'env zsh')"
    git clone https://github.com/MichaelAquilina/zsh-you-should-use.git $HOME/.oh-my-zsh/custom/plugins/you-should-use
    git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions
    chmod g-w,o-w ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions

    echo "Now customizing zsh setup"
    # Change theme (remove '' if not on macOS)
    # sed -i "s/robbyrussell/af-magic/g" ~/.zshrc
    sed -i "s/robbyrussell/af-magic/g" ~/.zshrc
    cat >> ~/.zshrc <<EOF

# Local config
[[ -f ~/.zshrc.local ]] && source ~/.zshrc.local

# aliases
[[ -f ~/.aliases ]] && source ~/.aliases

export PATH="$HOME/.bin:$PATH"
EOF
  fi
  
  # Use .dotfiles and .dotfiles-local to create aliases
  rcup -d .dotfiles -d .dotfiles-local
}

# Install SpaceVim for neovim
install_spacevim() {
  if [ -d "$HOME/.SpaceVim" ]; then
    cd "$HOME/.SpaceVim"
    git pull
  else
    curl -sLf https://spacevim.org/install.sh | bash -s -- --install neovim
    sudo pip3 install neovim
    nvim

    if [ -d "$HOME/.SpaceVim.d" ]; then
      echo "Moving init.toml"
      mv ~/.SpaceVim.d/init.toml{,.bak}
      cat > ~/.SpaceVim.d/init.vim <<EOF
let g:spacevim_plugin_bundle_dir = '~/.cache/vimfiles/'
call SpaceVim#layers#load('lang#ruby')
call SpaceVim#layers#load('ctrlp')
call SpaceVim#layers#load('shell')

let g:spacevim_custom_plugins = [
      \ ['sotte/presenting.vim'],
      \ ]

set clipboard+=unnamedplus

" Use the arrows to something usefull
map <right> :bn<CR>
map <left> :bp<CR>

" Close all the buffers
map <leader>ba :1,300 bd!<CR>

set wrap
EOF
    else
      echo "Folder not found"
    fi
  fi
}

show_final_messages() {
  cat << END
  Go to Trackpad and uncheck and check the "Tap to click" and "Secondary click" option.
  Also move click to "light" and turn on silent clicking.

  Also do these things manually:
  1. Activate unlimited scrollback for iTerm, set to 'reuse previous dir', change font to Inconsolata-dz Pt 14
  2. Go to Finder -> Cmd + up arrow 2 times -> Drag your home folder to left sidebar
  3. Click on battery on top right and click on "Show Percentage"
  4. Login to your Firefox account and start bookmark/addon sync
  5. Login to your accounts in Netease Music Player/Xiami
  6. Put Flux on autostart
  7. Login to Dropbox, Skype, Telegram
  8. Make VLC default player for famous formats
  9. Copy over important VPN configs for Tunnelblick and database configs for Sequel Pro
  10. Set up Kodi as per the reddit thread
  11. Set up .ssh keys (copy or create new)
  12. You might want to log in to these websites:
    Google account | Twitter | Amazon | GitHub | GitLab | reddit
  13. Start jdiskreport and run mlocate
  14. Set up keyboards for your preferred languages and layouts
  15. Put sensible defaults for Menumeters
  16. Install Xcode from App Store and execute these two commands:
      * sudo xcode-select -s /Applications/Xcode.app
      * sudo xcodebuild -license
      And run Xcode (you might have to install additional components)
  17. Run Android Studio so that it can download shizzle for you (~1GB of stuff but takes a while)
  18. Execute 'defaults write com.apple.dock persistent-apps -array' to remove all the dock items (if installing for the first time)
  19. Disable notifications on Firefox: about:config > dom.webnotifications.enabled > set to false

  Finally, close this tab and all the previously opened terminal tabs and continue working in a new tab.
END
}

install_thoughtbot
install_apt
install_packages
install_binaries
run_script
install_ohmyzsh
install_spacevim
show_final_messages